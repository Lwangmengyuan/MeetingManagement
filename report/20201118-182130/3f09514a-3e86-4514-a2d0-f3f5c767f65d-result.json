{"name": "test_register_employ_success[data0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False", "trace": "self = <testcases.test_register.Test_register object at 0x000001FF0A287FA0>\ndata = {'company_name': 'Company202011181821', 'employ_address': 'EAddress202011181821', 'employ_email': '13111181822@qq.com', 'employ_name': 'employ202011181821', ...}\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6b7b778784cac711ea7e85acb38d401e\")>\n\n    @pytest.mark.run(order=2)\n    @pytest.mark.parametrize('data', DealExcel().read('register')[1])\n    def test_register_employ_success(self, data, browser):\n        r = RegisterPage(browser)\n        r.get().employ_register(data)\n        time.sleep(5)\n        acture_val = r.employ_register_info()\n    \n        try:\n            assert data[\"expect_val\"] == acture_val\n            do_log.info(\"普通员工注册测试用例通过\")\n        except AssertionError as e:\n            do_log.error(f\"普通员工注册测试用例不通过:{e}\")\n>           raise e\n\ntestcases\\test_register.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_register.Test_register object at 0x000001FF0A287FA0>\ndata = {'company_name': 'Company202011181821', 'employ_address': 'EAddress202011181821', 'employ_email': '13111181822@qq.com', 'employ_name': 'employ202011181821', ...}\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6b7b778784cac711ea7e85acb38d401e\")>\n\n    @pytest.mark.run(order=2)\n    @pytest.mark.parametrize('data', DealExcel().read('register')[1])\n    def test_register_employ_success(self, data, browser):\n        r = RegisterPage(browser)\n        r.get().employ_register(data)\n        time.sleep(5)\n        acture_val = r.employ_register_info()\n    \n        try:\n>           assert data[\"expect_val\"] == acture_val\nE           assert True == False\n\ntestcases\\test_register.py:58: AssertionError"}, "attachments": [{"name": "log", "source": "11395f01-d16b-45a6-8180-cde0a5d0e3b2-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e78d781b-d9ab-4822-b0e5-3052e4ddd448-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'employ_name': 'employ202011181821', 'company_name': 'Company202011181821', 'employ_email': '13111181822@qq.com', 'employ_address': 'EAddress202011181821', 'employ_phone': '13111181822', 'verfily_code': '', 'expect_val': True}"}], "start": 1605694924676, "stop": 1605694961360, "uuid": "efcec052-bb06-4e8d-922b-d960d735ece8", "historyId": "5f374864e34c35dd39bebb05180554e5", "testCaseId": "9f843362d70103e29a4736b6f77a5ba0", "fullName": "testcases.test_register.Test_register#test_register_employ_success", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "Test_register"}, {"name": "host", "value": "DESKTOP-FOQDDUM"}, {"name": "thread", "value": "31416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_register"}]}