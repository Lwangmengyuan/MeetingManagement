{"name": "test_register_admin_success[data0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == True", "trace": "self = <testcases.test_register.Test_register object at 0x000001C97D2FBBE0>\ndata = {'admin_email': '13111181736@qq.com', 'admin_name': 'admin20201118173621', 'admin_phone': '13111181736', 'company_address': 'CAddress20201118173621', ...}\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"74325a8d0df8ce8075edc7130a02a72a\")>\n\n    @pytest.mark.parametrize('data', DealExcel().read('register')[0])\n    def test_register_admin_success(self, data, browser):\n        r = RegisterPage(browser)\n        r.get().admin_register(data)\n        time.sleep(5)\n        # acture_val = r.admin_register_info()\n        acture_val = True\n    \n        try:\n            assert data[\"expect_val\"] == acture_val\n            do_log.info(\"管理员注册测试用例通过\")\n        except AssertionError as e:\n            do_log.error(f\"管理员注册测试用例不通过:{e}\")\n>           raise e\n\ntestcases\\test_register.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_register.Test_register object at 0x000001C97D2FBBE0>\ndata = {'admin_email': '13111181736@qq.com', 'admin_name': 'admin20201118173621', 'admin_phone': '13111181736', 'company_address': 'CAddress20201118173621', ...}\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"74325a8d0df8ce8075edc7130a02a72a\")>\n\n    @pytest.mark.parametrize('data', DealExcel().read('register')[0])\n    def test_register_admin_success(self, data, browser):\n        r = RegisterPage(browser)\n        r.get().admin_register(data)\n        time.sleep(5)\n        # acture_val = r.admin_register_info()\n        acture_val = True\n    \n        try:\n>           assert data[\"expect_val\"] == acture_val\nE           AssertionError: assert '' == True\n\ntestcases\\test_register.py:40: AssertionError"}, "attachments": [{"name": "log", "source": "bf84feec-bac4-4201-a87a-1a66c23b1d10-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ecfbc99c-55bc-4d47-ad1d-86393e43828c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'company_name': 'Company20201118173621', 'company_address': 'CAddress20201118173621', 'admin_name': 'admin20201118173621', 'admin_email': '13111181736@qq.com', 'admin_phone': '13111181736', 'verfily_code': '', 'expect_val': ''}"}], "start": 1605692187487, "stop": 1605692214875, "uuid": "cc886b87-b5fa-4430-8afc-cc84f06c6bb0", "historyId": "2d6405756052fbe9d2c5d54294403d20", "testCaseId": "9ba365b71f3fff463a7fd4f4ab388c98", "fullName": "testcases.test_register.Test_register#test_register_admin_success", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "Test_register"}, {"name": "host", "value": "DESKTOP-FOQDDUM"}, {"name": "thread", "value": "29132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_register"}]}