{"name": "test_register_admin_success[data0]", "status": "broken", "statusDetails": {"message": "KeyError: 'phone'", "trace": "self = <testcases.test_register.Test_register object at 0x000001DB2B70DCA0>\ndata = {'admin_email': '13111181734@qq.com', 'admin_name': 'admin20201118173458', 'admin_phone': '13111181734', 'company_address': 'CAddress20201118173458', ...}\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e15240639d5897578f39b6169945478\")>\n\n    @pytest.mark.parametrize('data', DealExcel().read('register')[0])\n    def test_register_admin_success(self, data, browser):\n        r = RegisterPage(browser)\n>       r.get().admin_register(data)\n\ntestcases\\test_register.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.register_page.RegisterPage object at 0x000001DB2BF1C460>\ninfo = {'admin_email': '13111181734@qq.com', 'admin_name': 'admin20201118173458', 'admin_phone': '13111181734', 'company_address': 'CAddress20201118173458', ...}\n\n    def admin_register(self, info):\n        # 选择公司管理员，点击【完成】\n        self.find(self.admin_select_locator).click()\n        self.find(self.complete_btn_locator).click()\n        # 输入公司名称\n        self.find(self.admin_company_locator).send_keys(info['company_name'])\n        # 输入公司地址\n        self.find(self.admin_address_locator).send_keys(info['company_address'])\n        # 选择行业类型：互联网\n        self.select_element(self.industry_type_locator, self.industry_select_locator)\n        # 选择人员规模：50~100\n        self.select_element(self.staff_size_locator, self.staff_select_locator)\n        # 点击【下一步】\n        self.find(self.next_locator).click()\n        # 输入管理员姓名\n        self.find(self.admin_name_locator).send_keys(info['admin_name'])\n        # 输入管理员邮箱\n        self.find(self.admin_email_locator).send_keys(info['admin_email'])\n        # 输入手机号\n        self.find(self.admin_phone_locator).send_keys(info['admin_phone'])\n        # 生成验证码\n        self.find(self.admin_get_code_locator).click()\n        # 等待后台生成验证码\n        # TO-DO：待优化\n        time.sleep(20)\n        # 获取验证码\n>       code = GetVerifyCode().get_login_register(info['phone'], 'r')\nE       KeyError: 'phone'\n\npages\\register_page.py:92: KeyError"}, "parameters": [{"name": "data", "value": "{'company_name': 'Company20201118173458', 'company_address': 'CAddress20201118173458', 'admin_name': 'admin20201118173458', 'admin_email': '13111181734@qq.com', 'admin_phone': '13111181734', 'verfily_code': '', 'expect_val': ''}"}], "start": 1605692104507, "stop": 1605692126693, "uuid": "025d0d2e-34cf-4c6c-994c-63e604e16e94", "historyId": "2d6405756052fbe9d2c5d54294403d20", "testCaseId": "9ba365b71f3fff463a7fd4f4ab388c98", "fullName": "testcases.test_register.Test_register#test_register_admin_success", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "Test_register"}, {"name": "host", "value": "DESKTOP-FOQDDUM"}, {"name": "thread", "value": "3956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_register"}]}